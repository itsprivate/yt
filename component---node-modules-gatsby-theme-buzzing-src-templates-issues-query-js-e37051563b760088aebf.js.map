{"version":3,"sources":["webpack://example/./node_modules/gatsby-theme-buzzing/src/components/issue-item.js","webpack://example/./node_modules/gatsby-theme-buzzing/src/components/issue-item-box.js","webpack://example/./node_modules/gatsby-theme-buzzing/src/components/issue-items.js","webpack://example/./node_modules/gatsby-theme-buzzing/src/templates/issues-query.js","webpack://example/./node_modules/gatsby-theme-buzzing/src/components/issues-page.js"],"names":["props","item","basePath","issueNumber","sx","fontSize","as","Link","to","withPrefix","path","Trans","date","items","itemsByYears","forEach","year","push","years","Object","keys","sort","a","b","map","issueItems","pb","key","issueIndex","location","data","pageContext","pageType","allIssue","nodes","siteMetadata","site","title","menuLinks","gap","columns","minWidth"],"mappings":"wRAuBA,EAhBa,SAAAA,GACX,IAAQC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SACRC,EAAcF,EAAKE,YACzB,OACE,QAAC,QAAD,CAAWC,GAAI,CAAEC,SAAU,KACzB,QAAC,KAAD,CACEC,GAAIC,KACJC,IAAIC,gBAAWC,SAAUR,EAAV,UAA8BD,EAAKE,gBAElD,QAACQ,EAAA,EAAD,cAAc,CAAER,iBALpB,MAOI,oBAAOF,EAAKW,QCPpB,EAPgB,SAAAZ,GACd,OACE,QAAC,SAAD,CAAYM,GAAG,YACb,QAAC,EAASN,KCiChB,EApCc,SAAAA,GACZ,IAAQa,EAAoBb,EAApBa,MAAOX,EAAaF,EAAbE,SACTY,EAAe,GACrBD,EAAME,SAAQ,SAAAd,GACPa,EAAab,EAAKe,QACrBF,EAAab,EAAKe,MAAQ,IAE5BF,EAAab,EAAKe,MAAMC,KAAKhB,MAE/B,IAAMiB,EAAQC,OAAOC,KAAKN,GAAcO,MAAK,SAACC,EAAGC,GAC/C,OAAOA,EAAID,KAGb,OACE,mBACGJ,EAAMM,KAAI,SAAAR,GACT,IAAMS,EAAaX,EAAaE,GAChC,OACE,eAAKZ,GAAI,CAAEsB,GAAI,GAAKC,IAAKX,IACvB,QAAC,QAAD,KAAYA,GACXS,EAAWD,KAAI,SAACvB,EAAM2B,GACrB,OACE,QAAC,EAAD,CACED,IAAG,YAAcC,EACjB1B,SAAUA,EACVD,KAAMA,aC1BxB,ECKc,SAAC,GAAqC,IAAnC4B,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACvB7B,EAAuB6B,EAAvB7B,SAAU8B,EAAaD,EAAbC,SACZnB,EAAQiB,EAAKG,SAASC,MACtBC,EAAeL,EAAKM,KAAKD,aAEvBE,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UACf,OACE,QAAC,IAAD,CACEpC,SAAUA,EACV2B,SAAUA,EACVS,UAAWA,EACXD,MAAOA,EACPL,SAAUA,EACVD,YAAaA,EACbI,aAAcA,IAEd,QAAC,IAAD,CAAUJ,YAAaA,EAAaI,aAAcA,KAClD,QAAC,IAAD,CAAYJ,YAAaA,KACzB,QAAC,KAAD,CAAMQ,IAAK,CAAC,KAAM,KAAM,EAAG,GAAIC,QAAS,CAAC,EAAG,EAAJ,aACtC,gBAAMpC,GAAI,CAAEqC,SAAU,KACpB,QAAC,EAAD,CAAY5B,MAAOA,EAAOX,SAAUA,MAEtC,QAAC,IAAD,CACE2B,SAAUA,EACVC,KAAMA,EACNC,YAAaA,EACbI,aAAcA,MAGlB,QAAC,IAAD","file":"component---node-modules-gatsby-theme-buzzing-src-templates-issues-query-js-e37051563b760088aebf.js","sourcesContent":["/** @jsx jsx */\nimport { Themed, jsx, Link as LinkUI } from \"theme-ui\"\nimport { LocalizedLink as Link } from \"gatsby-theme-i18n\"\nimport { withPrefix } from \"gatsby\"\nimport path from \"path-browserify\"\nimport { Trans } from \"react-i18next\"\n\nconst Item = props => {\n  const { item, basePath } = props\n  const issueNumber = item.issueNumber\n  return (\n    <Themed.li sx={{ fontSize: 2 }}>\n      <LinkUI\n        as={Link}\n        to={withPrefix(path.join(basePath, `issues/${item.issueNumber}`))}\n      >\n        <Trans>Issue {{ issueNumber }}</Trans>\n      </LinkUI>\n      - <span>{item.date}</span>\n    </Themed.li>\n  )\n}\n\nexport default Item\n","/** @jsx jsx */\nimport Item from \"./issue-item\"\nimport { Themed, jsx } from \"theme-ui\"\n\nconst ItemBox = props => {\n  return (\n    <Themed.div as=\"article\">\n      <Item {...props}></Item>\n    </Themed.div>\n  )\n}\nexport default ItemBox\n","/** @jsx jsx */\nimport { Themed, jsx } from \"theme-ui\"\nimport ItemBox from \"./issue-item-box\"\n\nconst Items = props => {\n  const { items, basePath } = props\n  const itemsByYears = {}\n  items.forEach(item => {\n    if (!itemsByYears[item.year]) {\n      itemsByYears[item.year] = []\n    }\n    itemsByYears[item.year].push(item)\n  })\n  const years = Object.keys(itemsByYears).sort((a, b) => {\n    return b - a\n  })\n\n  return (\n    <div>\n      {years.map(year => {\n        const issueItems = itemsByYears[year]\n        return (\n          <div sx={{ pb: 3 }} key={year}>\n            <Themed.h4>{year}</Themed.h4>\n            {issueItems.map((item, issueIndex) => {\n              return (\n                <ItemBox\n                  key={`item-box-${issueIndex}`}\n                  basePath={basePath}\n                  item={item}\n                ></ItemBox>\n              )\n            })}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Items\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/issues-page\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query IssuesItemsPostsQuery($tagsFilter: BlogPostFilterInput) {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        keywords\n        siteUrl\n        telegram\n        iconUrl\n        defaultSocialImageUrl\n        social {\n          name\n          url\n          external\n        }\n        menuLinks {\n          name\n          url\n          external\n        }\n        disqus {\n          shortname\n        }\n        utterances {\n          repo\n          label\n        }\n      }\n    }\n    tagsGroup: allBlogPost(\n      sort: { fields: [date, slug], order: DESC }\n      filter: $tagsFilter\n    ) {\n      group(field: tags) {\n        fieldValue\n        totalCount\n      }\n    }\n    allIssue(\n      filter: { draft: { eq: false } }\n      sort: { fields: [date], order: DESC }\n    ) {\n      nodes {\n        issueNumber\n        date(formatString: \"YYYY-MM-DD\")\n        dateISO: date\n        datetime: date(formatString: \"YYYY-MM-DD HH:mm\")\n        year: date(formatString: \"YYYY\")\n      }\n    }\n  }\n`\n","/** @jsx jsx */\nimport Layout from \"gatsby-theme-timeline/src/components/layout\"\nimport Footer from \"gatsby-theme-timeline/src/components/home-footer\"\nimport { jsx, Grid } from \"theme-ui\"\nimport ItemsTitle from \"gatsby-theme-timeline/src/components/items-title\"\nimport AsideBox from \"gatsby-theme-timeline/src/components/aside-box\"\nimport ItemsSEO from \"gatsby-theme-timeline/src/components/items-seo\"\nimport IssueItems from \"./issue-items\"\nconst Items = ({ location, data, pageContext }) => {\n  const { basePath, pageType } = pageContext\n  const items = data.allIssue.nodes\n  const siteMetadata = data.site.siteMetadata\n\n  const { title, menuLinks } = siteMetadata\n  return (\n    <Layout\n      basePath={basePath}\n      location={location}\n      menuLinks={menuLinks}\n      title={title}\n      pageType={pageType}\n      pageContext={pageContext}\n      siteMetadata={siteMetadata}\n    >\n      <ItemsSEO pageContext={pageContext} siteMetadata={siteMetadata} />\n      <ItemsTitle pageContext={pageContext}></ItemsTitle>\n      <Grid gap={[null, null, 3, 4]} columns={[1, 1, `2fr 1fr`]}>\n        <main sx={{ minWidth: 0 }}>\n          <IssueItems items={items} basePath={basePath}></IssueItems>\n        </main>\n        <AsideBox\n          location={location}\n          data={data}\n          pageContext={pageContext}\n          siteMetadata={siteMetadata}\n        ></AsideBox>\n      </Grid>\n      <Footer />\n    </Layout>\n  )\n}\nexport default Items\n"],"sourceRoot":""}